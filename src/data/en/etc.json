[
    {
        "name": "Road of Pilgrim",
        "downloadLink": "",
        "demoVideo": "https://youtu.be/Ss_lU3XqzJs",
        "imageUrl": "Image/Road of Pilgrim_BG.jpg",
        "developmentPeriod": "2015.06.01 ~ 2016.06.30",
        "teamSize": "1 Programmer",
        "tools": [
            "Cocos2d-x"
        ],
        "description": "2D Action Run Game",
        "role": "Primary role in this project",
        "details": [
            "Used tile maps to designate the map, enemy, and player spawn locations",
            "Dynamically generated enemies at designated spawn points using vector and sprite creation features",
            "Implemented sound playback for various platforms using sound textures, macros, and preprocessors",
            "Applied hit detection and knockback effects using Box2D's real-time changes to static and dynamic bodies with collision handling",
            "Optimized game memory by managing creation and removal of Box2D objects and vectors",
            "Configured masks to prevent enemies' attacks from hitting each other while allowing the player's attacks to neutralize enemy attacks",
            "Used scheduling to dynamically generate and remove particles and bodies within the game"
        ]
    },
    {
        "name": "VRZONE Launcher",
        "downloadLink": "",
        "demoVideo": "",
        "imageUrl": "Image/platform.PNG",
        "developmentPeriod": "",
        "teamSize": "1 Programmer",
        "tools": [
            "C# winform"
        ],
        "description": "A launcher facilitating communication between the platform and individual PCs for tasks such as launching or closing games.",
        "role": "Primary role in this project",
        "details": [
            "Implemented UDP communication with the platform",
            "Relayed the status of each PC (VR headsets, controller battery information, etc.)",
            "Developed routines for game execution and closure",
            "Added functionality to play advertisement videos after game closure if available"
        ]
    },
    {
        "name": "Electromyography",
        "downloadLink": "",
        "demoVideo": "",
        "imageUrl": "Image/ems.jpg",
        "developmentPeriod": "2022.05.21 ~ 2022.07.31",
        "teamSize": "1 Programmer",
        "tools": [
            "C# winform"
        ],
        "description": "A sensor integration project using electromyography devices to assist with exercise.",
        "role": "Primary role in this project",
        "details": [
            "Developed Bluetooth communication between the electromyography device and PC",
            "Displayed electromyography EMS formulas graphically on PC"
        ]
    },
    {
        "name": "VR Delta Platform",
        "downloadLink": "",
        "demoVideo": "",
        "imageUrl": "Image/deltakiosk.png",
        "developmentPeriod": "",
        "teamSize": "1 Programmer",
        "tools": [
            "C# winform"
        ],
        "description": "A launcher and platform integration between Delta kiosks and PCs, including UI implementation.",
        "role": "Primary role in this project",
        "details": [
            "Implemented TCP communication between Delta kiosks and PCs",
            "Developed an advertisement playback feature within the PC launcher",
            "Created routines for game execution and closure"
        ]
    }
]